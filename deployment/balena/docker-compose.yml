# docker-compose.yml

# The design for the Balena image this file will render
# is that it should contain the following two service containers:
# + tl-fhau-web
#   This container will contain the FHAU CLI binary, and also a
#   minimal web server which will serve a GUI reflecting the 
#   FHAU application state and servicing requests to send messages
#   to the attached Mustang amp (which will be relayed to CLI 
#   commands to the application)
# + balenalabs-browser
#   This is a kiosk browser provided as an example by balena.io.
#   The intent of this service is that that the FHAU web GUI
#   will be presented on the HDMI screen of the balena device.

# Version notes:
# This version of the dockerfile disables running of the the 
# tl-fhau-web service container to enable the balenalabs-browser to
# start up without interference.

version: "2"

services:
  balenalabs-browser:
    image: bh.cr/gh_tim_littlefair/tl-browser-aarch64/624cbaae48b3d587486746d5505ba5ad2af7b967
    privileged: true
    network_mode: host
    devices:
      - /dev/fb0
    ports:
      - '5011' # management API (optional)
      - '35173' # Chromium debugging port (optional)
    environment: 
      - UDEV=1
      - SHOW_CURSOR=1
      - KIOSK=1
      #- PERSISTENT=1
      #- LAUNCH_URL=http://127.0.0.1:9090/start-fhau.html
    #volumes:
    #  - 'settings:/data'
    depends_on:
      - tl-fhau-web

# x-services:
  tl-fhau-web:
    build: .
    network_mode: host
    ports:
      - '9090'
    environment:
      UDEV: '1'
      #PERSISTENT: '1'
    devices:
      # On RPiZeroW2 this service only starts successfully if
      # all /dev/hidraw* devices defined here are plugged in
      # when it starts.  RPi3-64bit seems to be more tolerant
      # and can cope with nodes being mentioned here but not
      # found at startup.
      - /dev/hidraw0
      - /dev/hidraw1
    cap_add:
      - SYS_RAWIO
    #volumes:
      #- 'settings:/data'
